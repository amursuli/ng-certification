{"ast":null,"code":"import _classCallCheck from \"/Users/mursuli/WebstormProjects/ng-certification/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mursuli/WebstormProjects/ng-certification/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { take } from 'rxjs/operators';\nimport { Validators } from '@angular/forms';\nimport { handleApiError } from '../shared/utils/handleError';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../core/services/weather/weather.service\";\nimport * as i3 from \"../core/services/localStorage/local-storage.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./components/weather/weather.component\";\n\nfunction WeatherForecastComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Zipcode is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction WeatherForecastComponent_div_8_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid zipcode format.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction WeatherForecastComponent_div_8_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"This location is already added\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction WeatherForecastComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, WeatherForecastComponent_div_8_div_1_Template, 2, 0, \"div\", 4);\n    i0.ɵɵtemplate(2, WeatherForecastComponent_div_8_div_2_Template, 2, 0, \"div\", 4);\n    i0.ɵɵtemplate(3, WeatherForecastComponent_div_8_div_3_Template, 2, 0, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.zipcodeForm.get(\"zipcode\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.zipcodeForm.get(\"zipcode\").errors.pattern);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isAdded);\n  }\n}\n\nfunction WeatherForecastComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"app-weather\", 7);\n    i0.ɵɵlistener(\"removeLocation\", function WeatherForecastComponent_div_12_Template_app_weather_removeLocation_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r8);\n      var i_r6 = restoredCtx.index;\n      var ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.removeLocation($event, i_r6);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var weather_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"weatherDetail\", weather_r5);\n  }\n}\n\nexport var WeatherForecastComponent = /*#__PURE__*/(function () {\n  var WeatherForecastComponent = /*#__PURE__*/function () {\n    function WeatherForecastComponent(formBuilder, weatherService, localStorageService) {\n      _classCallCheck(this, WeatherForecastComponent);\n\n      this.formBuilder = formBuilder;\n      this.weatherService = weatherService;\n      this.localStorageService = localStorageService;\n      this.zipcodes = [];\n      this.weatherDetail = [];\n      this.isAdded = false;\n      this.zipcodeForm = this.formBuilder.group({\n        zipcode: ['', [Validators.required, Validators.pattern(/^\\d{5}$/)]]\n      });\n    }\n\n    _createClass(WeatherForecastComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        if (this.localStorageService.getZipcodes().length > 0) {\n          this.localStorageService.getZipcodes().forEach(function (zip) {\n            _this.getWeatherByZipcode(zip);\n          });\n        }\n      }\n    }, {\n      key: \"getWeatherByZipcode\",\n      value: function getWeatherByZipcode(zipcode) {\n        var _this2 = this;\n\n        this.weatherService.getWeatherByZipcode(zipcode).pipe(take(1)).subscribe({\n          next: function next(weather) {\n            _this2.createWeatherDetail(weather, zipcode);\n          },\n          error: function error(err) {\n            handleApiError(err);\n          }\n        });\n      }\n    }, {\n      key: \"createWeatherDetail\",\n      value: function createWeatherDetail(weather, zipcode) {\n        var _a, _b, _c, _d;\n\n        var newWeatherLocation = {\n          zipcode: zipcode,\n          place: weather.name,\n          condition: (_a = weather.weather[0]) === null || _a === void 0 ? void 0 : _a.main,\n          currentTemperature: (_b = weather.main) === null || _b === void 0 ? void 0 : _b.temp,\n          maxTemperature: (_c = weather.main) === null || _c === void 0 ? void 0 : _c.temp_max,\n          minTemperature: (_d = weather.main) === null || _d === void 0 ? void 0 : _d.temp_min\n        };\n        this.weatherDetail.push(newWeatherLocation);\n      }\n    }, {\n      key: \"addLocationByZipcode\",\n      value: function addLocationByZipcode() {\n        var zipcode = this.zipcodeForm.get('zipcode').value;\n\n        if (this.localStorageService.addZipcode(parseInt(zipcode))) {\n          //this.isAdded = false;\n          this.getWeatherByZipcode(parseInt(zipcode));\n        } else {\n          this.isAdded = true;\n        }\n\n        this.zipcodeForm.get('zipcode').reset();\n      }\n    }, {\n      key: \"onBeforeUnload\",\n      value: function onBeforeUnload(event) {\n        localStorage.clear();\n      }\n    }, {\n      key: \"removeLocation\",\n      value: function removeLocation(zipcode, index) {\n        this.localStorageService.removeZipcode(zipcode);\n        this.weatherDetail.splice(index, 1);\n      }\n    }]);\n\n    return WeatherForecastComponent;\n  }();\n\n  WeatherForecastComponent.ɵfac = function WeatherForecastComponent_Factory(t) {\n    return new (t || WeatherForecastComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.WeatherService), i0.ɵɵdirectiveInject(i3.LocalStorageService));\n  };\n\n  WeatherForecastComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WeatherForecastComponent,\n    selectors: [[\"app-home\"]],\n    hostBindings: function WeatherForecastComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"beforeunload\", function WeatherForecastComponent_beforeunload_HostBindingHandler($event) {\n          return ctx.onBeforeUnload($event);\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    inputs: {\n      removeLocation: \"removeLocation\"\n    },\n    decls: 13,\n    vars: 4,\n    consts: [[1, \"container-fluid\"], [1, \"well\"], [3, \"formGroup\"], [\"placeholder\", \"Zipcode\", \"type\", \"text\", \"id\", \"addLocation\", \"formControlName\", \"zipcode\", 1, \"form-control\"], [4, \"ngIf\"], [\"id\", \"addLocationBtn\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"weatherDetail\", \"removeLocation\"]],\n    template: function WeatherForecastComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h4\");\n        i0.ɵɵtext(2, \"Template for main page:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵelementStart(4, \"h2\");\n        i0.ɵɵtext(5, \"Enter a zipcode:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 2);\n        i0.ɵɵelement(7, \"input\", 3);\n        i0.ɵɵtemplate(8, WeatherForecastComponent_div_8_Template, 4, 3, \"div\", 4);\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function WeatherForecastComponent_Template_button_click_10_listener() {\n          return ctx.addLocationByZipcode();\n        });\n        i0.ɵɵtext(11, \" Add location \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, WeatherForecastComponent_div_12_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.zipcodeForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.zipcodeForm.get(\"zipcode\").invalid && (ctx.zipcodeForm.get(\"zipcode\").dirty || ctx.zipcodeForm.get(\"zipcode\").touched));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.zipcodeForm.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.weatherDetail);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i4.NgIf, i4.NgForOf, i5.WeatherComponent],\n    styles: [\"\"]\n  });\n  return WeatherForecastComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}